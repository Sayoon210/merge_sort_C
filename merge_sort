#include <stdio.h>
#include <stdlib.h>
#define SIZE 11

//printf("%d\n", 6);




int *merge_sort(int *first, int *second, int len_f, int len_s) {
  int size = (len_f + len_s)/sizeof(int);
  int *c = (int*)malloc(size * sizeof(int));
  int i = 0;
  int j = 0;
  int c_index = 0;

  


  while(i < len_f/sizeof(int) && j < len_s/sizeof(int)) {
    if(first[i] >= second[j]) {
      c[c_index] = second[j];
      ++j;
      ++c_index;
    }
    else {
      c[c_index] = first[i];
      ++i;
      ++c_index;
    }
  }
  if(i == len_f/sizeof(int)) {
    while(c_index < size) {
      c[c_index] = second[j];
      ++j;
      ++c_index;
    }
  }
  else if(j == len_s/sizeof(int)){
    while(c_index < size) {
      c[c_index] = first[i];
      ++i;
      ++c_index;
    }
  }


 
  return c;
}





int *merge_and_sort_asc(int *arr, int sizeof_arr) {

  int s = 0;
  int e = sizeof_arr - 1;

  if(sizeof_arr == 1) {

    return arr;
  }

  /////////////////////////////////////////////
  int first[sizeof_arr/2];
  int second[sizeof_arr - sizeof_arr/2];
  ////////////////////////////////////////////

  for(int i = 0; i < (e-s+1)/2; i++) {
    first[i] = arr[i];

    
  }

  int q = 0;
  
  for(int j = (e-s+1)/2; j < sizeof_arr; j++) {
    second[q] = arr[j];
 
    ++q;
  }

  int a = s/2;//0
  int b = e/2;//3

  int *sum = (int*)malloc((sizeof(first) + sizeof(second))/sizeof(int));
  int *temp1 = merge_and_sort_asc(first, sizeof(first)/sizeof(int));
  int *temp2 = merge_and_sort_asc(second, sizeof(second)/sizeof(int));


  sum = merge_sort(temp1, temp2, sizeof(first), sizeof(second));
  
  return sum;
}


int main(void) {

  int arr[SIZE] = {2,5,1,3,8,6,7,4,9,10,12};

  int *new_arr = merge_and_sort_asc(arr, SIZE);

  for(int i = 0; i < SIZE; i++) {
    printf("%d ", new_arr[i]);
  }
  // 출력 
 
  return 0;
}
